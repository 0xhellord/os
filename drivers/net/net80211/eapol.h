/*++

Copyright (c) 2015 Minoca Corp. All Rights Reserved

Module Name:

    eapol.h

Abstract:

    This header contains definitions for the Extensible Authentication Protocol
    over LAN, which facilitates authenticating nodes over a secured network.

Author:

    Chris Stevens 4-Nov-2015

--*/

//
// ------------------------------------------------------------------- Includes
//

//
// ---------------------------------------------------------------- Definitions
//

//
// ------------------------------------------------------ Data Type Definitions
//

typedef enum EAPOL_MODE {
    EapolModeInvalid,
    EapolModeSupplicant,
    EapolModeAuthenticator
} EAPOL_MODE, *PEAPOL_MODE;

/*++

Structure Description:

    This structure defines the key generated by EAPOL.

Members:

    Key - Stores a pointer to the allocated key.

    KeyLength - Stores the length of the key.

--*/

typedef struct _EAPOL_KEY {
    PUCHAR Key;
    ULONG KeyLength;
} EAPOL_KEY, *PEAPOL_KEY;

/*++

Structure Description:

    This structure defines the parameters required to create an EAPOL instance.

Members:

    Mode - Store the mode in which this EAPOL instance should act.

    Link - Stores a pointer to the physical link over which this EAPOL instance
        will send and receive data.

    SupplicantAddress - Stores the physical address of the EAPOL supplicant.

    AuthenticatorAddress - Stores the physical address of the EAPOL
        authenticator.

    Ssid - Stores a pointer to the SSID of the BSS for which the authentication
        is taking place.

    SsidLength - Stores the length of the SSID string, not including the NULL
        terminator.

    Passphrase - Stores a pointer to the passphrase for the BSS.

    PassphraseLength - Stores the length of the passphrase.

    SupplicantRsn - Stores the RSN information from the supplicant's IEEE
        802.11 association request packet.

    SupplicantRsnSize - Stores the size of the supplicant's RSN information.

    AuthenticatorRsn - Stores the RSN information from the authenticator's
        IEEE 802.11 beacon packet or probe response packet.

    AuthenticatorRsnSize - Stores the size of the authenticator's RSN
        information.

--*/

typedef struct _EAPOL_CREATION_PARAMETERS {
    EAPOL_MODE Mode;
    PNET_LINK Link;
    PNETWORK_ADDRESS SupplicantAddress;
    PNETWORK_ADDRESS AuthenticatorAddress;
    PSTR Ssid;
    ULONG SsidLength;
    PUCHAR Passphrase;
    ULONG PassphraseLength;
    PUCHAR SupplicantRsn;
    ULONG SupplicantRsnSize;
    PUCHAR AuthenticatorRsn;
    ULONG AuthenticatorRsnSize;
} EAPOL_CREATION_PARAMETERS, *PEAPOL_CREATION_PARAMETERS;

//
// -------------------------------------------------------------------- Globals
//

//
// -------------------------------------------------------- Function Prototypes
//

KSTATUS
Net80211pEapolInstanceCreate (
    PEAPOL_CREATION_PARAMETERS Parameters,
    PHANDLE EapolHandle
    );

/*++

Routine Description:

    This routine creates an EAPOL instance through which a session's private
    key will be derived. The caller can indicate if it intends to be the
    supplicant or the authenticator in the parameters.

Arguments:

    Parameters - Supplies a pointer to the EAPOL instance creation parameters.

    EapolHandle - Supplies a pointer that receives a handle to the created
        EAPOL instance.

Return Value:

    Status code.

--*/

VOID
Net80211pEapolInstanceDestroy (
    HANDLE EapolHandle
    );

/*++

Routine Description:

    This routine destroys the given EAPOL instance.

Arguments:

    EapolHandle - Supplies the handle to the EAPOL instance to destroy.

Return Value:

    None.

--*/

KSTATUS
Net80211pEapolGetKey (
    HANDLE EapolHandle,
    PEAPOL_KEY Key
    );

/*++

Routine Description:

    This routine attempts to get the session's key from the given EAPOL
    instance. It may block until the key is ready.

Arguments:

    EapolHandle - Supplies a handle to the EAPOL instance whose key is being
        queried.

    Key - Supplies a pointer to an EAPOL key structure that receives the EAPOL
        instance's key.

Return Value:

    None.

--*/

