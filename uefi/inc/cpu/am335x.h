/*++

Copyright (c) 2014 Minoca Corp. All Rights Reserved

Module Name:

    am335x.h

Abstract:

    This header contains definitions for the Texas Instruments AM335x SoC.

Author:

    Evan Green 17-Dec-2014

--*/

//
// ------------------------------------------------------------------- Includes
//

//
// --------------------------------------------------------------------- Macros
//

#define AM335_PAD_GPMC_AD(_Index) (0x800 + ((_Index) * 4))
#define AM335_PAD_GPMC_A(_Index) (0x840 + ((_Index) * 4))
#define AM335_PAD_LCD_DATA(_Index) (0x8A0 + ((_Index) * 4))
#define AM335_PAD_UART_RXD(_Index) (0x970 + ((_Index) * 0x10))
#define AM335_PAD_UART_TXD(_Index) (0x974 + ((_Index) * 0x10))
#define AM335_SOC_CONTROL_DDR_CMD_IO_CONTROL(_Index) (0x1404 + ((_Index) * 4))
#define AM335_SOC_CONTROL_DDR_DATA_IO_CONTROL(_Index) (0x1440 + ((_Index) * 4))
#define AM335_PAD_MUXCODE(_Code) (_Code)

//
// These macros access interrupt controller registers.
//

#define AM335_INTC_LINE_TO_INDEX(_Line) ((_Line) >> 5)
#define AM335_INTC_LINE_TO_MASK(_Line) (1 << ((_Line) & 0x1F))

#define AM335_INTC_MASK(_Index) (0x084 + ((_Index) * 0x20))
#define AM335_INTC_MASK_CLEAR(_Index) (0x088 + ((_Index) * 0x20))
#define AM335_INTC_MASK_SET(_Index) (0x08C + ((_Index) * 0x20))
#define AM335_INTC_LINE(_Line) (0x100 + ((_Line) * 0x4))

//
// This macro fills in the bits of the raster timing 0 register given a number
// of pixels per line (which is the horizontal resolution minus one).
//

#define AM335_LCD_RESOLUTION_X_TO_TIMING_0(_PixelsPerLine) \
    (((_PixelsPerLine) & 0x000003F0) | (((_PixelsPerLine) & 0x00000400) >> 7))

//
// These macros convert a vertical lines per panel to timing 1 and 2 values.
// Lines per panel is the vertical resolution minus one.
//

#define AM335_LCD_RESOLUTION_Y_TO_TIMING_1(_LinesPerPanel) \
    ((_LinesPerPanel) & 0x000003FF)

#define AM335_LCD_RESOLUTION_Y_TO_TIMING_2(_LinesPerPanel)  \
    ((((_LinesPerPanel) & 0x00000400) >> 10) <<             \
     AM335_LCD_RASTER_TIMING_2_LINES_PER_PANEL_BIT_10_SHIFT)

//
// ---------------------------------------------------------------- Definitions
//

//
// Define the fixed 32.768kHz frequency floating around the SoC in various
// locations.
//

#define AM335_32KHZ_FREQUENCY 32768

//
// Define the interrupt map.
//

#define AM335_IRQ_DMTIMER0 66
#define AM335_IRQ_DMTIMER1 67
#define AM335_IRQ_DMTIMER2 68
#define AM335_IRQ_DMTIMER3 69
#define AM335_IRQ_DMTIMER4 92
#define AM335_IRQ_DMTIMER5 93
#define AM335_IRQ_DMTIMER6 94
#define AM335_IRQ_DMTIMER7 95

#define AM335_EMIF_0_REGISTERS 0x4C000000

//
// Define peripheral bases.
//

#define AM335_DMTIMER0_BASE 0x44E05000
#define AM335_GPIO_0_BASE 0x44E07000
#define AM335_UART_0_BASE 0x44E09000
#define AM335_UART_1_BASE 0x44E0A000
#define AM335_I2C_0_BASE 0x44E0B000
#define AM335_DMTIMER1_BASE 0x44E31000
#define AM335_WATCHDOG_BASE 0x44E35000
#define AM335_DMTIMER2_BASE 0x48040000
#define AM335_DMTIMER3_BASE 0x48042000
#define AM335_DMTIMER4_BASE 0x48044000
#define AM335_DMTIMER5_BASE 0x48046000
#define AM335_DMTIMER6_BASE 0x48048000
#define AM335_DMTIMER7_BASE 0x4804A000
#define AM335_GPIO_1_BASE 0x4804C000
#define AM335_HSMMC_0_BASE 0x48060000
#define AM335_GPIO_2_BASE 0x481AC000
#define AM335_GPIO_3_BASE 0x481AE000
#define AM335_HSMMC_1_BASE 0x481D8000
#define AM335_INTC_BASE 0x48200000
#define AM335_LCD_REGISTERS 0x4830E000

//
// Define PRCM bases.
//

#define AM335_PRCM_REGISTERS 0x44E00000
#define AM335_PRCM_SIZE 0x2000
#define AM335_CM_PER_OFFSET 0x0000
#define AM335_CM_WAKEUP_OFFSET 0x0400
#define AM335_CM_DPLL_OFFSET 0x0500
#define AM335_PRM_DEVICE_OFFSET 0x0F00

#define AM335_CM_PER_REGISTERS (AM335_PRCM_REGISTERS + AM335_CM_PER_OFFSET)
#define AM335_CM_WAKEUP_REGISTERS \
    (AM335_PRCM_REGISTERS + AM335_CM_WAKEUP_OFFSET)

#define AM335_SOC_CM_DPLL_REGISTERS \
    (AM335_PRCM_REGISTERS + AM335_CM_DPLL_OFFSET)

#define AM335_PRM_DEVICE_REGISTERS \
    (AM335_PRCM_REGISTERS + AM335_PRM_DEVICE_OFFSET)

//
// Define EMIF registers.
//

#define AM335_EMIF_SDRAM_CONFIG 0x08
#define AM335_EMIF_SDRAM_REF_CONTROL 0x10
#define AM335_EMIF_SDRAM_REF_CONTROL_SHADOW 0x14
#define AM335_EMIF_SDRAM_TIM_1 0x18
#define AM335_EMIF_SDRAM_TIM_1_SHADOW 0x1C
#define AM335_EMIF_SDRAM_TIM_2 0x20
#define AM335_EMIF_SDRAM_TIM_2_SHADOW 0x24
#define AM335_EMIF_SDRAM_TIM_3 0x28
#define AM335_EMIF_SDRAM_TIM_3_SHADOW 0x2C
#define AM335_EMIF_ZQ_CONFIG 0xC8
#define AM335_EMIF_DDR_PHY_CONTROL_1 0xE4
#define AM335_EMIF_DDR_PHY_CONTROL_1_SHADOW 0xE8
#define AM335_EMIF_DDR_PHY_CONTROL_2 0xEC

//
// DDR3 CKE control register definitions.
//

#define AM335_DDR3_CONTROL_DDR_CKE_CONTROL 0x00000001

//
// Define SoC control registers.
//

#define AM335_SOC_CONTROL_SECURE_EMIF_SDRAM_CONFIG 0x0110
#define AM335_SOC_CONTROL_DEVICE_ID 0x0600
#define AM335_SOC_CONTROL_USB_CONTROL1 0x628
#define AM335_SOC_CONTROL_MAC_ID0_LOW 0x0630
#define AM335_SOC_CONTROL_MAC_ID0_HIGH 0x0634
#define AM335_SOC_CONTROL_MAC_ID1_LOW 0x0638
#define AM335_SOC_CONTROL_MAC_ID1_HIGH 0x063C
#define AM335_SOC_CONTROL_GMII_SEL 0x650
#define AM335_SOC_CONTROL_EFUSE_SMA 0x07FC
#define AM335_SOC_CONTROL_CONF_LCD_VSYNC 0x8E0
#define AM335_SOC_CONTROL_CONF_LCD_HSYNC 0x8E4
#define AM335_SOC_CONTROL_CONF_LCD_PCLK 0x8E8
#define AM335_SOC_CONTROL_CONF_LCD_AC_BIAS_EN 0x8EC
#define AM335_SOC_CONTROL_CONF_MMC0_DAT3 0x8F0
#define AM335_SOC_CONTROL_CONF_MMC0_DAT2 0x8F4
#define AM335_SOC_CONTROL_CONF_MMC0_DAT1 0x8F8
#define AM335_SOC_CONTROL_CONF_MMC0_DAT0 0x8FC
#define AM335_SOC_CONTROL_CONF_MMC0_CLK 0x900
#define AM335_SOC_CONTROL_CONF_MMC0_CMD 0x904
#define AM335_SOC_CONTROL_CONF_MII1_COL 0x908
#define AM335_SOC_CONTROL_CONF_MII1_CRS 0x90C
#define AM335_SOC_CONTROL_CONF_MII1_RXERR 0x910
#define AM335_SOC_CONTROL_CONF_MII1_TXEN 0x914
#define AM335_SOC_CONTROL_CONF_MII1_RXDV 0x918
#define AM335_SOC_CONTROL_CONF_MII1_TXD3 0x91C
#define AM335_SOC_CONTROL_CONF_MII1_TXD2 0x920
#define AM335_SOC_CONTROL_CONF_MII1_TXD1 0x924
#define AM335_SOC_CONTROL_CONF_MII1_TXD0 0x928
#define AM335_SOC_CONTROL_CONF_MII1_TXCLK 0x92C
#define AM335_SOC_CONTROL_CONF_MII1_RXCLK 0x930
#define AM335_SOC_CONTROL_CONF_MII1_RXD3 0x934
#define AM335_SOC_CONTROL_CONF_MII1_RXD2 0x938
#define AM335_SOC_CONTROL_CONF_MII1_RXD1 0x93C
#define AM335_SOC_CONTROL_CONF_MII1_RXD0 0x940
#define AM335_SOC_CONTROL_CONF_RMII1_REFCLK 0x944
#define AM335_SOC_CONTROL_CONF_MDIO_DATA 0x948
#define AM335_SOC_CONTROL_CONF_MDIO_CLK 0x94C
#define AM335_SOC_CONTROL_CONF_SPI0_CS1 0x960
#define AM335_SOC_CONTROL_I2C0_SDA 0x0988
#define AM335_SOC_CONTROL_I2C0_SCL 0x098C
#define AM335_SOC_CONTROL_CONF_XDMA_EVENT_INTR0 0x9B0
#define AM335_SOC_CONTROL_VTP_CONTROL 0x0E0C
#define AM335_SOC_CONTROL_DDR_IO_CONTROL 0x0E04
#define AM335_SOC_CONTROL_DDR_CKE_CONTROL 0x131C

//
// Define SoC control device ID register bits.
//

#define AM335_SOC_CONTROL_DEVICE_ID_REVISION_SHIFT 0x1C
#define AM335_SOC_DEVICE_VERSION_1_0 0
#define AM335_SOC_DEVICE_VERSION_2_0 1
#define AM335_SOC_DEVICE_VERSION_2_1 2

//
// Define generic SOC control pad configuration register bits.
//

#define AM335_PAD_CONTROL_PULL_ENABLE 0x00000008
#define AM335_PAD_CONTROL_PULL_UP 0x00000010
#define AM335_PAD_CONTROL_RX_ACTIVE 0x00000020
#define AM335_PAD_CONTROL_SLEW_CONTROL 0x00000040

//
// Define USB0/1 control register bits.
//

#define AM335_SOC_USB_CONTROL_SESSION_END_DETECT 0x00100000
#define AM335_SOC_USB_CONTROL_VBUS_DETECT 0x00080000

//
// Define UART0 RXD pad control register bits.
//

#define AM335_SOC_CONTROL_UART0_RXD_PULLUP 0x00000010
#define AM335_SOC_CONTROL_UART0_RXD_RX_ACTIVE 0x00000020

//
// Define UART0 TXD pad control register bits.
//

#define AM335_SOC_CONTROL_UART0_TXD_PULLUP 0x00000010

//
// SoC control MMC0 DAT3 configuration register bits.
//

#define AM335_SOC_CONF_MMC0_DAT3_CONF_MMC0_DAT3_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_DAT3_CONF_MMC0_DAT3_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_DAT3_CONF_MMC0_DAT3_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_DAT3_CONF_MMC0_DAT3_RXACTIVE_SHIFT 5

//
// SoC control MMC0 DAT2 configuration register bits.
//

#define AM335_SOC_CONF_MMC0_DAT2_CONF_MMC0_DAT2_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_DAT2_CONF_MMC0_DAT2_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_DAT2_CONF_MMC0_DAT2_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_DAT2_CONF_MMC0_DAT2_RXACTIVE_SHIFT 5

//
// SoC control MMC0 DAT1 configuration register bits.
//

#define AM335_SOC_CONF_MMC0_DAT1_CONF_MMC0_DAT1_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_DAT1_CONF_MMC0_DAT1_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_DAT1_CONF_MMC0_DAT1_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_DAT1_CONF_MMC0_DAT1_RXACTIVE_SHIFT 5

//
// SoC control MMC0 DAT0 configuration register bits.
//

#define AM335_SOC_CONF_MMC0_DAT0_CONF_MMC0_DAT0_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_DAT0_CONF_MMC0_DAT0_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_DAT0_CONF_MMC0_DAT0_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_DAT0_CONF_MMC0_DAT0_RXACTIVE_SHIFT 5

//
// SoC control MMC0 CLK configuration register bits.
//

#define AM335_SOC_CONF_MMC0_CLK_CONF_MMC0_CLK_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_CLK_CONF_MMC0_CLK_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_CLK_CONF_MMC0_CLK_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_CLK_CONF_MMC0_CLK_RXACTIVE_SHIFT 5

//
// SoC control MMC0 CMD configuration register bits.
//

#define AM335_SOC_CONF_MMC0_CMD_CONF_MMC0_CMD_MMODE_SHIFT 0
#define AM335_SOC_CONF_MMC0_CMD_CONF_MMC0_CMD_PUDEN_SHIFT 3
#define AM335_SOC_CONF_MMC0_CMD_CONF_MMC0_CMD_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_MMC0_CMD_CONF_MMC0_CMD_RXACTIVE_SHIFT 5

//
// SoC control SPI0 CS1 configuration register bits.
//

#define AM335_SOC_CONF_SPI0_CS1_CONF_SPI0_CS1_MMODE_SHIFT 0
#define AM335_SOC_CONF_SPI0_CS1_CONF_SPI0_CS1_PUDEN_SHIFT 3
#define AM335_SOC_CONF_SPI0_CS1_CONF_SPI0_CS1_PUTYPESEL_SHIFT 4
#define AM335_SOC_CONF_SPI0_CS1_CONF_SPI0_CS1_RXACTIVE_SHIFT 5

//
// Define I2C0 SDA pad control registers.
//

#define AM335_SOC_CONTROL_I2C0_SDA_RX_PULLUP 0x00000010
#define AM335_SOC_CONTROL_I2C0_SDA_RX_ACTIVE 0x00000020
#define AM335_SOC_CONTROL_I2C0_SDA_RX_SLEW_CONTROL 0x00000040

//
// Define I2C0 SCL pad control registers.
//

#define AM335_SOC_CONTROL_I2C0_SCL_RX_PULLUP 0x00000010
#define AM335_SOC_CONTROL_I2C0_SCL_RX_ACTIVE 0x00000020
#define AM335_SOC_CONTROL_I2C0_SCL_RX_SLEW_CONTROL 0x00000040

//
// SoC control VTP control register bits (used for DDR initialization).
//

#define AM335_SOC_CONTROL_VTP_CONTROL_CLRZ 0x00000001
#define AM335_SOC_CONTROL_VTP_CONTROL_READY 0x00000020
#define AM335_SOC_CONTROL_VTP_CONTROL_ENABLE 0x00000040

//
// Define SoC control MII register definitions.
//

#define AM335_SOC_CONF_MII1_RXACTIVE 0x00000020
#define AM335_SOC_CPSW_MII_SEL_MODE 0x00

//
// Define SoC control MDIO register definitions.
//

#define AM335_SOC_CONF_MDIO_RXACTIVE 0x00000020
#define AM335_SOC_CONF_MDIO_PUTYPESEL 0x00000010
#define AM335_SOC_CPSW_MDIO_SEL_MODE 0x00

//
// Define GPIO registers.
//

#define AM335_GPIO_CONFIGURATION 0x010
#define AM335_GPIO_SYSTEM_STATUS 0x114
#define AM335_GPIO_CONTROL 0x130
#define AM335_GPIO_OUTPUT_ENABLE 0x134
#define AM335_GPIO_CLEAR_DATA_OUT 0x190
#define AM335_GPIO_SET_DATA_OUT 0x194

//
// Define GPIO system configuration register bits.
//

#define AM335_GPIO_CONFIGURATION_RESET_DONE 0x00000001
#define AM335_GPIO_CONFIGURATION_SOFT_RESET 0x00000002

//
// Define GPIO control register bits.
//

#define AM335_GPIO_CONTROL_DISABLE_MODULE 0x00000001

//
// Define CM PER registers.
//

#define AM335_CM_PER_L4LS_CLOCK_STATE_CONTROL 0x000
#define AM335_CM_PER_L3S_CLOCK_STATE_CONTROL 0x004
#define AM335_CM_PER_L4FW_CLOCK_STATE_CONTROL 0x008
#define AM335_CM_PER_L3_CLOCK_STATE_CONTROL 0x00C
#define AM335_CM_PER_CPGMAC0_CLOCK_CONTROL 0x014
#define AM335_CM_PER_LCD_CLOCK_CONTROL 0x018
#define AM335_CM_PER_USB0_CLOCK_CONTROL 0x1C
#define AM335_CM_PER_EMIF_CLOCK_CONTROL 0x028
#define AM335_CM_PER_MMC0_CLOCK_CONTROL 0x03C
#define AM335_CM_PER_L4LS_CLOCK_CONTROL 0x060
#define AM335_CM_PER_L4FW_CLOCK_CONTROL 0x064
#define AM335_CM_PER_TIMER7_CLOCK_CONTROL 0x07C
#define AM335_CM_PER_TIMER2_CLOCK_CONTROL 0x080
#define AM335_CM_PER_TIMER3_CLOCK_CONTROL 0x084
#define AM335_CM_PER_TIMER4_CLOCK_CONTROL 0x088
#define AM335_CM_PER_GPIO1_CLOCK_CONTROL 0x0AC
#define AM335_CM_PER_CPSW_CLOCK_STATE_CONTROL 0x144
#define AM335_CM_PER_EMIF_FW_CLOCK_CONTROL 0x0D0
#define AM335_CM_PER_L3_INSTR_CLOCK_CONTROL 0x0DC
#define AM335_CM_PER_L3_CLOCK_CONTROL 0x0E0
#define AM335_CM_PER_TIMER5_CLOCK_CONTROL 0x0EC
#define AM335_CM_PER_TIMER6_CLOCK_CONTROL 0x0F0
#define AM335_CM_PER_L4HS_CLOCK_CONTROL 0x120
#define AM335_CM_PER_OCPWP_L3_CLOCK_STATE_CONTROL 0x12C

//
// CM Per MMC0 clock control register bits.
//

#define AM335_CM_PER_MMC0_CLOCK_ENABLE 0x00000002

//
// L4LS clock state control register bits.
//

#define AM335_CM_PER_L4LS_CLOCK_STATE_ACTIVITY_GPIO1 (1 << 19)
#define AM335_CM_PER_L4LS_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002

//
// L4FW clock state control register bits.
//

#define AM335_CM_PER_L4FW_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002

//
// GPIO1 CM PER Clock control register bits.
//

#define AM335_CM_PER_GPIO1_CLOCK_ENABLE 0x2
#define AM335_CM_PER_GPIO1_CLOCK_MODE_MASK 0x3
#define AM335_CM_PER_GPIO1_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_GPIO1_CLOCK_IDLE_STATE_MASK (0x3 << 16)
#define AM335_CM_PER_GPIO1_CLOCK_FUNCTIONAL_CLOCK_ENABLE (1 << 18)

//
// L3 clock control register bits.
//

#define AM335_CM_PER_L3_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_L3_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_L3_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_L3_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM Per CPGMAC0 clock control register bits.
//

#define AM335_CM_PER_CPGMAC0_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_CPGMAC0_CLOCK_IDLE_STATE_FUNCTIONAL 0x00000000
#define AM335_CM_PER_CPGMAC0_CLOCK_IDLE_STATE_MASK 0x00030000

//
// L3 Instr clock control bits.
//

#define AM335_CM_PER_L3_INSTR_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_L3_INSTR_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_L3_INSTR_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_L3_INSTR_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// LCD clock control register bits.
//

#define AM335_CM_PER_LCD_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_LCD_CLOCK_MODE_MASK 0x00000003

//
// USB0 clock control register bits.
//

#define AM335_CM_PER_USB0_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_USB0_CLOCK_MODE_MASK 0x00000003

//
// CM PER EMIF Fw clock control register bits.
//

#define AM335_CM_PER_EMIF_FW_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_EMIF_FW_CLOCK_ENABLE 0x00000002

//
// CM PER EMIF Fw clock control register bits.
//

#define AM335_CM_PER_EMIF_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_EMIF_CLOCK_ENABLE 0x00000002

//
// L3 clock state control register bits.
//

#define AM335_CM_PER_L3_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_PER_L3_CLOCK_STATE_TRANSITION_MASK 0x00000003
#define AM335_CM_PER_L3_CLOCK_STATE_EMIF_ACTIVE 0x00000004
#define AM335_CM_PER_L3_CLOCK_STATE_ACTIVE 0x00000010

//
// OCPWP L3 clock state register bits.
//

#define AM335_CM_PER_OCPWP_L3_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_PER_OCPWP_L3_CLOCK_STATE_TRANSITION_MASK 0x00000003
#define AM335_CM_PER_OCPWP_L3_CLOCK_STATE_ACTIVE 0x00000010

//
// L3S clock state register bits.
//

#define AM335_CM_PER_L3S_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_PER_L3S_CLOCK_STATE_TRANSITION_MASK 0x00000003
#define AM335_CM_PER_L3S_CLOCK_STATE_ACTIVE 0x00000008

//
// L4LS clock control register bits.
//

#define AM335_CM_PER_L4LS_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_L4LS_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_L4LS_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_L4LS_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// L4FW clock control register bits.
//

#define AM335_CM_PER_L4FW_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_L4FW_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_L4FW_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_L4FW_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM Per CPSW clock state control register bits.
//

#define AM335_CM_PER_CPSW_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_PER_CPSW_CLOCK_STATE_CPSW_125MHZ_GCLK 0x00000010

//
// L4HS clock control register bits.
//

#define AM335_CM_PER_L4HS_CLOCK_ENABLE 0x00000002
#define AM335_CM_PER_L4HS_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_PER_L4HS_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_PER_L4HS_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM Wakeup L4FW clock control register bits.
//

#define AM335_CM_WAKEUP_L4FW_CLOCK_ENABLE 0x00000002
#define AM335_CM_WAKEUP_L4FW_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_WAKEUP_L4FW_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_WAKEUP_L4FW_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM wakeup registers.
//

#define AM335_CM_WAKEUP_CLOCK_STATE_CONTROL 0x000
#define AM335_CM_WAKEUP_CONTROL_CLOCK_CONTROL 0x004
#define AM335_CM_WAKEUP_L4WKUP_CLOCK_CONTROL 0x00C
#define AM335_CM_WAKEUP_TIMER0_CLOCK_CONTROL 0x10
#define AM335_CM_WAKEUP_L3_AON_CLOCK_STATE_CONTROL 0x018
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_MPU 0x020
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_MPU 0x02C
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DDR 0x034
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DDR 0x040
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DISP 0x048
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DISP 0x054
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_CORE 0x05C
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_CORE 0x068
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_PER 0x070
#define AM335_CM_WAKEUP_CLOCK_DCO_LDO_DPLL_PER 0x7C
#define AM335_CM_WAKEUP_DIV_M4_DPLL_CORE 0x080
#define AM335_CM_WAKEUP_DIV_M5_DPLL_CORE 0x084
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_MPU 0x088
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_PER 0x08C
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_CORE 0x090
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DDR 0x094
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DISP 0x098
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_PER 0x09C
#define AM335_CM_WAKEUP_DIV_M2_DPLL_DDR 0x0A0
#define AM335_CM_WAKEUP_DIV_M2_DPLL_DISP 0x0A4
#define AM335_CM_WAKEUP_DIV_M2_DPLL_MPU 0x0A8
#define AM335_CM_WAKEUP_DIV_M2_DPLL_PER 0x0AC
#define AM335_CM_WAKEUP_UART0_CLOCK_CONTROL 0x0B4
#define AM335_CM_WAKEUP_I2C0_CLOCK_CONTROL 0x0B8
#define AM335_CM_WAKEUP_TIMER1_CLOCK_CONTROL 0x0C4
#define AM335_CM_WAKEUP_L4WKUP_AON_CLOCK_STATE_CONTROL 0x0CC
#define AM335_CM_WAKEUP_DIV_M6_DPLL_CORE 0x0D8

//
// CM wakeup clock state control register bits.
//

#define AM335_CM_WAKEUP_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_WAKEUP_CLOCK_STATE_TRANSITION_MASK 0x00000003
#define AM335_CM_WAKEUP_CLOCK_STATE_L4WAKEUP_ACTIVE 0x00000004
#define AM335_CM_WAKEUP_CLOCK_STATE_I2C0_ACTIVE 0x00000800
#define AM335_CM_WAKEUP_CLOCK_STATE_UART0_ACTIVE 0x00001000

//
// CM wakeup control clock control bits.
//

#define AM335_CM_WAKEUP_CONTROL_CLOCK_ENABLE 0x00000002
#define AM335_CM_WAKEUP_CONTROL_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_WAKEUP_CONTROL_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_WAKEUP_CONTROL_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM wakeup L4 wakeup clock control register bits.
//

#define AM335_CM_WAKEUP_L4WKUP_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_WAKEUP_L4WKUP_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM wakeup L3 always on clock state register bits.
//

#define AM335_CM_WAKEUP_L3_AON_CLOCK_STATE_SOFTWARE_WAKEUP 0x00000002
#define AM335_CM_WAKEUP_L3_AON_CLOCK_STATE_TRANSITION_MASK 0x00000003
#define AM335_CM_WAKEUP_L3_AON_CLOCK_STATE_ACTIVE 0x00000008

//
// CM wakeup UART0 clock control register bits.
//

#define AM335_CM_WAKEUP_UART0_CONTROL_CLOCK_ENABLE 0x00000002
#define AM335_CM_WAKEUP_UART0_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_WAKEUP_UART0_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_WAKEUP_UART0_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM wakeup I2C0 clock control register bits.
//

#define AM335_CM_WAKEUP_I2C0_CONTROL_CLOCK_ENABLE 0x00000002
#define AM335_CM_WAKEUP_I2C0_CLOCK_MODE_MASK 0x00000003
#define AM335_CM_WAKEUP_I2C0_CLOCK_IDLE_STATE_FUNCTIONAL (0x0 << 16)
#define AM335_CM_WAKEUP_I2C0_CLOCK_IDLE_STATE_MASK (0x3 << 16)

//
// CM wakeup L4 wakeup always on clock state register bits.
//

#define AM335_CM_WAKEUP_L4WKUP_AON_CLOCK_STATE_ACTIVE 0x00000004

//
// CM Wakeup DDR PLL clock mode register bits.
//

#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DDR_ENABLE_MN_BYPASS 0x00000004
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DDR_ENABLE 0x0000007

//
// CM Wakeup DDR PLL idle status register bits.
//

#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DDR_MN_BYPASS 0x00000100
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DDR_CLOCK 0x00000001

//
// CM Wakeup MPU PLL clock select register bits.
//

#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DDR_DIV_MASK 0x0000007F
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DDR_DIV_SHIFT 0
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DDR_MULT_MASK 0x0007FF00
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DDR_MULT_SHIFT 8

//
// CM Wakeup MPU PLL M2 divisor register bits.
//

#define AM335_CM_WAKEUP_DIV_M2_DPLL_DDR_CLOCK_OUT_MASK 0x0000001F

//
// CM Wakeup PER PLL clock mode register bits.
//

#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_PER_ENABLE_MN_BYPASS 0x00000004
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_PER_ENABLE 0x0000007

//
// CM Wakeup PER PLL idle status register bits.
//

#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_PER_MN_BYPASS 0x00000100
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_PER_CLOCK 0x00000001

//
// CM Wakeup PER PLL clock select register bits.
//

#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_PER_MULT_SHIFT 8
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_PER_DIV_SHIFT 0

//
// CM Wakeup PER PLL M2 divider register bits.
//

#define AM335_CM_WAKEUP_DIV_M2_DPLL_PER_CLOCK_OUT_DIV_MASK 0x0000007F
#define AM335_CM_WAKEUP_DIV_M2_DPLL_PER_CLOCK_OUT_DIV_SHIFT 0

//
// CM Wakeup CORE PLL clock mode register bits.
//

#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_CORE_ENABLE_MN_BYPASS 0x00000004
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_CORE_ENABLE 0x0000007

//
// CM Wakeup CORE PLL idle status register bits.
//

#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_CORE_MN_BYPASS 0x00000100
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_CORE_CLOCK 0x00000001

//
// CM Wakeup CORE PLL clock select register bits.
//

#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_CORE_DIV_SHIFT 0
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_CORE_MULT_SHIFT 8

//
// CM Wakeup CORE PLL M4 divider register bits.
//

#define AM335_CM_WAKEUP_DIV_M4_DPLL_CORE_HSDIVIDER_CLOCK_OUT1_DIV_MASK \
    0x0000001F

#define AM335_CM_WAKEUP_DIV_M4_DPLL_CORE_HSDIVIDER_CLOCK_OUT1_DIV_SHIFT 0

//
// CM Wakeup CORE PLL M5 divider register bits.
//

#define AM335_CM_WAKEUP_DIV_M5_DPLL_CORE_HSDIVIDER_CLOCK_OUT2_DIV_MASK \
    0x0000001F

#define AM335_CM_WAKEUP_DIV_M5_DPLL_CORE_HSDIVIDER_CLOCK_OUT2_DIV_SHIFT 0

//
// CM Wakeup CORE PLL M6 divider register bits.
//

#define AM335_CM_WAKEUP_DIV_M6_DPLL_CORE_HSDIVIDER_CLOCK_OUT3_DIV_MASK \
    0x0000001F

#define AM335_CM_WAKEUP_DIV_M6_DPLL_CORE_HSDIVIDER_CLOCK_OUT3_DIV_SHIFT 0

//
// CM Wakeup MPU PLL clock mode register bits.
//

#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_MPU_ENABLE_MN_BYPASS 0x00000004
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_MPU_ENABLE 0x00000007

//
// CM Wakeup MPU PLL idle status register bits.
//

#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_MPU_CLOCK 0x00000001
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_MPU_MN_BYPASS 0x00000100

//
// CM Wakeup MPU PLL clock select register bits.
//

#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_MPU_DIV_MASK 0x0000007F
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_MPU_DIV_SHIFT 0
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_MPU_MULT_MASK 0x0007FF00
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_MPU_MULT_SHIFT 8

//
// CM Wakeup MPU PLL M2 divisor register bits.
//

#define AM335_CM_WAKEUP_DIV_M2_DPLL_MPU_CLOCK_OUT_MASK 0x0000001F

//
// CM Wakeup Display PLL clock mode register bits.
//

#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DISP_ENABLE_MN_BYPASS 0x00000004
#define AM335_CM_WAKEUP_CLOCK_MODE_DPLL_DISP_ENABLE 0x0000007

//
// CM Wakeup Display PLL idle status register bits.
//

#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DISP_MN_BYPASS 0x00000100
#define AM335_CM_WAKEUP_IDLE_STATUS_DPLL_DISP_CLOCK 0x00000001

//
// CM Wakeup Display PLL clock select register bits.
//

#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DISP_DIV_MASK 0x0000007F
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DISP_DIV_SHIFT 0
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DISP_MULT_MASK 0x0007FF00
#define AM335_CM_WAKEUP_CLOCK_SELECT_DPLL_DISP_MULT_SHIFT 8

//
// CM Wakeup Display PLL M2 divider register bits.
//

#define AM335_CM_WAKEUP_DIV_M2_DPLL_DISP_CLOCK_OUT_MASK 0x0000001F

//
// CM Wakeup DCO LDO Peripheral DPLL register bits.
//

#define AM335_CM_WAKEUP_DCO_LDO_PER_DPLL_GATE_CONTROL 0x00000100

//
// Hardcoded PLL values.
//

#define AM335_MPU_PLL_N 23
#define AM335_MPU_PLL_M2 1

#define AM335_CORE_PLL_M 1000
#define AM335_CORE_PLL_N 23
#define AM335_CORE_PLL_HSDIVIDER_M4 10
#define AM335_CORE_PLL_HSDIVIDER_M5 8
#define AM335_CORE_PLL_HSDIVIDER_M6 4

#define AM335_PER_PLL_M 960
#define AM335_PER_PLL_N 23
#define AM335_PER_PLL_M2 5

#define AM335_DDR_PLL_M_DDR2 266
#define AM335_DDR_PLL_M_DDR3 303
#define AM335_DDR_PLL_N 23
#define AM335_DDR_PLL_M2 1

#define AM335_DISP_PLL_M 25
#define AM335_DISP_PLL_N 2
#define AM335_DISP_PLL_M2 1

//
// Define CM DPLL registers.
//

#define AM335_CM_DPLL_CLOCK_SELECT_TIMER7 0x04
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER2 0x08
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER3 0x0C
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER4 0x10
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER5 0x18
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER6 0x1C
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER1 0x28
#define AM335_CM_DPLL_CLOCK_SELECT_LCD 0x34

//
// CM DPLL clock select timer register bits (any timer except 1).
//

#define AM335_CM_DPLL_CLOCK_SELECT_TIMER_MASK 0x00000003
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER_TCLKIN 0x0
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER_SYSTEM_CLOCK 0x1
#define AM335_CM_DPLL_CLOCK_SELECT_TIMER_32KHZ 0x2

#define AM335_CM_PER_TIMER2_CLOCK_ENABLE 0x00000002

#define AM335_CM_WAKEUP_TIMER0_CLOCK_ENABLE 0x00000002

#define AM335_SOC_CONTROL_REGISTERS 0x44E10000

//
// CM Wakeup Timer1 PLL clock select register bits.
//

#define AM335_CM_DPLL_CLOCK_SELECT_TIMER1_32KHZ 0x00000001

//
// CM DPLL LCD clock select register bits.
//

#define AM335_CM_DPLL_CLOCK_SELECT_LCD_DISP_PLL_CLKOUT_M2 0x0
#define AM335_CM_DPLL_CLOCK_SELECT_LCD_CORE_PLL_CLKOUT_M5 0x1
#define AM335_CM_DPLL_CLOCK_SELECT_LCD_PER_PLL_CLKOUT_M2 0x2

//
// Define PRM Device registers.
//

#define AM335_PRM_DEVICE_RESET_CONTROL 0x00

//
// Define PRM Device Reset Control register bits.
//

#define AM335_PRM_DEVICE_RESET_CONTROL_WARM_RESET 0x00000001
#define AM335_PRM_DEVICE_RESET_CONTROL_COLD_RESET 0x00000002

//
// Define UART registers.
//

#define AM335_UART_RBR 0x00
#define AM335_UART_THR 0x00
#define AM335_UART_DLL 0x00
#define AM335_UART_IER 0x04
#define AM335_UART_DLM 0x04
#define AM335_UART_FCR 0x08
#define AM335_UART_IIR 0x08
#define AM335_UART_LCR 0x0C
#define AM335_UART_MCR 0x10
#define AM335_UART_LSR 0x14
#define AM335_UART_MSR 0x18
#define AM335_UART_SCR 0x1C
#define AM335_UART_MDR1 0x20
#define AM335_UART_SYSTEM_CONTROL 0x54
#define AM335_UART_SYSTEM_STATUS 0x58

//
// Define UART system control register bits.
//

#define AM335_UART_SYSTEM_CONTROL_RESET 0x00000002

//
// Define UART system status register bits.
//

#define AM335_UART_SYSTEM_STATUS_RESET_DONE 0x00000001

//
// Define I2C registers.
//

#define AM335_I2C_SYSTEM_CONTROL 0x10
#define AM335_I2C_RAW_INTERRUPT_STATUS 0x24
#define AM335_I2C_INTERRUPT_STATUS 0x28
#define AM335_I2C_SYSTEM_STATUS 0x90
#define AM335_I2C_COUNT 0x98
#define AM335_I2C_DATA 0x9C
#define AM335_I2C_CONTROL 0xA4
#define AM335_I2C_SLAVE_ADDRESS 0xAC
#define AM335_I2C_PRESCALER 0xB0
#define AM335_I2C_DIVISOR_LOW 0xB4
#define AM335_I2C_DIVISOR_HIGH 0xB8
#define AM335_I2C_BUFFER_STATUS 0xC0

//
// I2C system control register bits.
//

#define AM335_I2C_SYSTEM_CONTROL_AUTO_IDLE 0x00000001
#define AM335_I2C_SYSTEM_CONTROL_SOFT_RESET 0x00000002

//
// I2C system status register bits.
//

#define AM335_I2C_SYSTEM_STATUS_RESET_DONE 0x00000001

//
// I2C control register bits.
//

#define AM335_I2C_CONTROL_ENABLED 0x00008000
#define AM335_I2C_CONTROL_START 0x00000001
#define AM335_I2C_CONTROL_STOP 0x00000002
#define AM335_I2C_CONTROL_TRANSMIT 0x00000200
#define AM335_I2C_CONTROL_MASTER 0x00000400

//
// Define the I2C slave address of the TPS65217 PMIC.
//

#define AM335_TPS65217_I2C_ADDRESS 0x24

//
// Define interrupt status register bits.
//

#define AM335_I2C_INTERRUPT_STATUS_TRANSMIT_READY 0x00000010
#define AM335_I2C_INTERRUPT_STATUS_STOP_CONDITION 0x00000100
#define AM335_INTERRUPT_STATUS_MASK 0x000007FF

#define AM335_I2C_RAW_INTERRUPT_STATUS_AREADY 0x00000004
#define AM335_I2C_RAW_INTERRUPT_STATUS_RECEIVE_READY 0x00000008
#define AM335_I2C_RAW_INTERRUPT_STATUS_TRANSMIT_READY 0x00000010
#define AM335_I2C_RAW_INTERRUPT_STATUS_STOP_CONDITION 0x00000100
#define AM335_I2C_RAW_INTERRUPT_STATUS_BUSY 0x00001000

//
// Define buffer status register bits.
//

#define AM335_I2C_BUFFER_STATUS_RX_SHIFT 8
#define AM335_I2C_BUFFER_STATUS_RX_MASK 0x3F

//
// Define internal parameters used to create a 100kHz bus clock.
//

#define AM335_I2C_SYSTEM_CLOCK_SPEED 48000000
#define AM335_I2C_INTERNAL_CLOCK_SPEED 12000000
#define AM335_I2C_OUTPUT_CLOCK_SPEED 100000

//
// EFuse bit for OPP100 275MHz, 1.1v.
//

#define AM335_EFUSE_OPP100_275_MASK 0x00000001
#define AM335_EFUSE_OPP100_275 0

//
// EFuse bit for OPP100 500MHz, 1.1v.
//

#define AM335_EFUSE_OPP100_500_MASK 0x00000002
#define AM335_EFUSE_OPP100_500 1

//
// EFuse bit for OPP100 600MHz, 1.2v.
//

#define AM335_EFUSE_OPP120_600_MASK 0x00000004
#define AM335_EFUSE_OPP120_600 2

//
// EFuse bit for OPP Turbo 720MHz, 1.26v.
//

#define AM335_EFUSE_OPPTB_720_MASK 0x00000008
#define AM335_EFUSE_OPPTB_720 3

//
// EFuse bit for OPP50 300MHz, 1.1v.
//

#define AM335_EFUSE_OPP50_300_MASK 0x00000010
#define AM335_EFUSE_OPP50_300 4

//
// EFuse bit for OPP100 300MHz, 1.1v.
//

#define AM335_EFUSE_OPP100_300_MASK 0x00000020
#define AM335_EFUSE_OPP100_300 5

//
// EFuse bit for OPP100 600MHz, 1.1v.
//

#define AM335_EFUSE_OPP100_600_MASK 0x00000040
#define AM335_EFUSE_OPP100_600 6

//
// EFuse bit for OPP120 700MHz, 1.2v.
//

#define AM335_EFUSE_OPP120_720_MASK 0x00000080
#define AM335_EFUSE_OPP120_720 7

//
// EFuse bit for OPP Turbo 800MHz, 1.26v.
//

#define AM335_EFUSE_OPPTB_800_MASK 0x00000100
#define AM335_EFUSE_OPPTB_800 8

//
// EFuse bit for OPP Turbo 1000MHz, 1.325v.
//

#define AM335_EFUSE_OPPNT_1000_MASK 0x00000200
#define AM335_EFUSE_OPPNT_1000 9
#define AM335_SOC_CONTROL_EFUSE_OPP_MASK 0x00001FFF
#define AM335_EFUSE_OPP_MAX (AM335_EFUSE_OPPNT_1000 + 1)

//
// Define types of OPP.
//

#define AM335_OPP_NONE 0
#define AM335_OPP50 1
#define AM335_OPP100 2
#define AM335_OPP120 3
#define AM335_OPP_SR_TURBO 4
#define AM335_OPP_NITRO 5

//
// MPU PLL configurations.
//

#define AM335_MPU_PLL_M_275MHZ 275
#define AM335_MPU_PLL_M_300MHZ 300
#define AM335_MPU_PLL_M_500MHZ 500
#define AM335_MPU_PLL_M_600MHZ 600
#define AM335_MPU_PLL_M_720MHZ 720
#define AM335_MPU_PLL_M_800MHZ 800
#define AM335_MPU_PLL_M_1000MHZ 1000

//
// Define PMIC voltage configurations.
//

#define AM335_PMIC_VOLTAGE_950MV TPS65217_DCDC_VOLTAGE_950MV
#define AM335_PMIC_VOLTAGE_1100MV TPS65217_DCDC_VOLTAGE_1100MV
#define AM335_PMIC_VOLTAGE_1200MV TPS65217_DCDC_VOLTAGE_1200MV
#define AM335_PMIC_VOLTAGE_1260MV TPS65217_DCDC_VOLTAGE_1275MV
#define AM335_PMIC_VOLTAGE_1325MV 0x11

//
// Define TPS65217 PMIC registers.
//

#define TPS65217_POWER_PATH 0x01
#define TPS65217_STATUS 0x0A
#define TPS65217_PASSWORD 0x0B
#define TPS65217_PGOOD 0x0C
#define TPS65217_DEFDCDC2 0x0F
#define TPS65217_DEFSLEW 0x11
#define TPS65217_DEFLS1 0x14
#define TPS65217_DEFLS2 0x15

//
// Define PMIC power path register bits.
//

#define TPS65217_POWER_PATH_USB_INPUT_CURRENT_LIMIT_MASK 0x03
#define TPS65217_POWER_PATH_USB_INPUT_CURRENT_LIMIT_100MA 0x00
#define TPS65217_POWER_PATH_USB_INPUT_CURRENT_LIMIT_500MA 0x01
#define TPS65217_POWER_PATH_USB_INPUT_CURRENT_LIMIT_1300MA 0x02
#define TPS65217_POWER_PATH_USB_INPUT_CURRENT_LIMIT_1800MA 0x03

#define TPS65217_DCDC_VOLTAGE_1275MV 0x0F
#define TPS65217_DCDC_VOLTAGE_1200MV 0x0C
#define TPS65217_DCDC_VOLTAGE_1100MV 0x08
#define TPS65217_DCDC_VOLTAGE_950MV 0x02

#define TPS65217_PROTECTION_NONE 0
#define TPS65217_PROTECTION_LEVEL_1 1
#define TPS65217_PROTECTION_LEVEL_2 2

#define TPS65217_PASSWORD_UNLOCK 0x7D
#define TPS65217_DCDC_GO 0x80

#define TPS65217_LDO_VOLTAGE_OUT_3_3 0x1F
#define TPS65217_LDO_MASK 0x1F

//
// Define DDR PHY control registers.
//

#define AM335_DDR_PHY_REGISTERS (AM335_SOC_CONTROL_REGISTERS + 0x2000)
#define AM335_DDR_CMD0_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x01C)
#define AM335_DDR_CMD0_SLAVE_FORCE_0 (AM335_DDR_PHY_REGISTERS + 0x020)
#define AM335_DDR_CMD0_SLAVE_DELAY_0 (AM335_DDR_PHY_REGISTERS + 0x024)
#define AM335_DDR_CMD0_LOCK_DIFF_0 (AM335_DDR_PHY_REGISTERS + 0x028)
#define AM335_DDR_CMD0_INVERT_CLKOUT_0 (AM335_DDR_PHY_REGISTERS + 0x02C)
#define AM335_DDR_CMD1_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x050)
#define AM335_DDR_CMD1_SLAVE_FORCE_0 (AM335_DDR_PHY_REGISTERS + 0x054)
#define AM335_DDR_CMD1_SLAVE_DELAY_0 (AM335_DDR_PHY_REGISTERS + 0x058)
#define AM335_DDR_CMD1_LOCK_DIFF_0 (AM335_DDR_PHY_REGISTERS + 0x5C)
#define AM335_DDR_CMD1_INVERT_CLKOUT_0 (AM335_DDR_PHY_REGISTERS + 0x060)
#define AM335_DDR_CMD2_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x084)
#define AM335_DDR_CMD2_SLAVE_FORCE_0 (AM335_DDR_PHY_REGISTERS + 0x088)
#define AM335_DDR_CMD2_SLAVE_DELAY_0 (AM335_DDR_PHY_REGISTERS + 0x08C)
#define AM335_DDR_CMD2_LOCK_DIFF_0 (AM335_DDR_PHY_REGISTERS + 0x090)
#define AM335_DDR_CMD2_INVERT_CLKOUT_0 (AM335_DDR_PHY_REGISTERS + 0x094)
#define AM335_DDR_DATA0_RD_DQS_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x0C8)
#define AM335_DDR_DATA0_RD_DQS_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x0CC)
#define AM335_DDR_DATA0_WR_DQS_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x0DC)
#define AM335_DDR_DATA0_WR_DQS_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x0E0)
#define AM335_DDR_DATA0_WRLVL_INIT_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x0F0)
#define AM335_DDR_DATA0_WRLVL_INIT_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x0F4)
#define AM335_DDR_DATA0_GATELVL_INIT_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x0FC)
#define AM335_DDR_DATA0_GATELVL_INIT_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x100)
#define AM335_DDR_DATA0_FIFO_WE_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x108)
#define AM335_DDR_DATA0_FIFO_WE_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x10C)
#define AM335_DDR_DATA0_WR_DATA_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x120)
#define AM335_DDR_DATA0_WR_DATA_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x124)
#define AM335_DDR_DATA0_USE_RANK0_DELAYS_0 (AM335_DDR_PHY_REGISTERS + 0x134)
#define AM335_DDR_DATA0_LOCK_DIFF_0 (AM335_DDR_PHY_REGISTERS + 0x138)
#define AM335_DDR_DATA1_RD_DQS_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x16C)
#define AM335_DDR_DATA1_RD_DQS_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x170)
#define AM335_DDR_DATA1_WR_DQS_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x180)
#define AM335_DDR_DATA1_WR_DQS_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x184)
#define AM335_DDR_DATA1_WRLVL_INIT_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x194)
#define AM335_DDR_DATA1_WRLVL_INIT_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x198)
#define AM335_DDR_DATA1_GATELVL_INIT_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x1A0)
#define AM335_DDR_DATA1_GATELVL_INIT_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x1A4)
#define AM335_DDR_DATA1_FIFO_WE_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x1AC)
#define AM335_DDR_DATA1_FIFO_WE_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x1B0)
#define AM335_DDR_DATA1_WR_DATA_SLAVE_RATIO_0 (AM335_DDR_PHY_REGISTERS + 0x1C4)
#define AM335_DDR_DATA1_WR_DATA_SLAVE_RATIO_1 (AM335_DDR_PHY_REGISTERS + 0x1C8)
#define AM335_DDR_DATA1_USE_RANK0_DELAYS_0 (AM335_DDR_PHY_REGISTERS + 0x1D8)
#define AM335_DDR_DATA1_LOCK_DIFF_0 (AM335_DDR_PHY_REGISTERS + 0x1DC)

//
// Define DDR3 parameters. These are specific to the BeagleBone Black, and
// there needs to be a different set for the BeagleBone (white).
//

#define AM335_DDR3_CMD0_SLAVE_RATIO_0 0x80
#define AM335_DDR3_CMD0_INVERT_CLKOUT_0 0x0
#define AM335_DDR3_CMD1_SLAVE_RATIO_0 0x80
#define AM335_DDR3_CMD1_INVERT_CLKOUT_0 0x0
#define AM335_DDR3_CMD2_SLAVE_RATIO_0 0x80
#define AM335_DDR3_CMD2_INVERT_CLKOUT_0 0x0

#define AM335_DDR3_DATA0_RD_DQS_SLAVE_RATIO_0 0x38
#define AM335_DDR3_DATA0_WR_DQS_SLAVE_RATIO_0 0x44
#define AM335_DDR3_DATA0_FIFO_WE_SLAVE_RATIO_0 0x94
#define AM335_DDR3_DATA0_WR_DATA_SLAVE_RATIO_0 0x7D

#define AM335_DDR3_DATA0_RD_DQS_SLAVE_RATIO_1 0x38
#define AM335_DDR3_DATA0_WR_DQS_SLAVE_RATIO_1 0x44
#define AM335_DDR3_DATA0_FIFO_WE_SLAVE_RATIO_1 0x94
#define AM335_DDR3_DATA0_WR_DATA_SLAVE_RATIO_1 0x7D

#define AM335_DDR3_CONTROL_DDR_CMD_IOCTRL_0 0x18B
#define AM335_DDR3_CONTROL_DDR_CMD_IOCTRL_1 0x18B
#define AM335_DDR3_CONTROL_DDR_CMD_IOCTRL_2 0x18B

#define AM335_DDR3_CONTROL_DDR_DATA_IOCTRL_0 0x18B
#define AM335_DDR3_CONTROL_DDR_DATA_IOCTRL_1 0x18B

#define AM335_DDR3_CONTROL_DDR_IO_CTRL 0xEFFFFFFF

#define AM335_DDR3_EMIF_DDR_PHY_CTRL_1 0x06
#define AM335_DDR3_EMIF_DDR_PHY_CTRL_1_DY_PWRDN 0x00100000
#define AM335_DDR3_EMIF_DDR_PHY_CTRL_1_SHDW 0x06
#define AM335_DDR3_EMIF_DDR_PHY_CTRL_1_SHDW_DY_PWRDN 0x00100000
#define AM335_DDR3_EMIF_DDR_PHY_CTRL_2 0x06

#define AM335_DDR3_EMIF_SDRAM_TIM_1 0x0AAAD4DB
#define AM335_DDR3_EMIF_SDRAM_TIM_1_SHDW 0x0AAAD4DB

#define AM335_DDR3_EMIF_SDRAM_TIM_2 0x266B7FDA
#define AM335_DDR3_EMIF_SDRAM_TIM_2_SHDW 0x266B7FDA

#define AM335_DDR3_EMIF_SDRAM_TIM_3 0x501F867F
#define AM335_DDR3_EMIF_SDRAM_TIM_3_SHDW 0x501F867F

#define AM335_DDR3_EMIF_SDRAM_REF_CTRL_VAL1 0x00000C30
#define AM335_DDR3_EMIF_SDRAM_REF_CTRL_SHDW_VAL1 0x00000C30

#define AM335_DDR3_EMIF_ZQ_CONFIG_VAL 0x50074BE4

//
// Termination = 1 RZQ / 4
// Dynamic ODT = 2 RZQ / 2
// SDRAM Drive = 0 RZQ / 6
// CWL = 0 CAS write latency of 5
// CL = 2 CAS latency of 5
// Row Size = 7 16 row bits
// Page Size = 2 10 column bits
//

#define AM335_DDR3_EMIF_SDRAM_CONFIG 0x61C04BB2

//
// Define interrupt controller registers.
//

#define AM335_INTC_SYSTEM_CONFIG 0x010
#define AM335_INTC_SYSTEM_STATUS 0x014
#define AM335_INTC_SORTED_IRQ 0x040
#define AM335_INTC_SORTED_FIQ 0x044
#define AM335_INTC_CONTROL 0x048
#define AM335_INTC_IRQ_PRIORITY 0x060
#define AM335_INTC_FIQ_PRIORITY 0x064
#define AM335_INTC_THRESHOLD 0x068

//
// Interrupt system configuration register bits.
//

#define AM335_INTC_SYSTEM_CONFIG_SOFT_RESET 0x00000002

//
// Interrupt system status register bits.
//

#define AM335_INTC_SYSTEM_STATUS_RESET_DONE 0x00000001

//
// Interrupt line register bits.
//

#define AM335_INTC_LINE_IRQ 0x00000000
#define AM335_INTC_LINE_FIQ 0x00000001
#define AM335_INTC_LINE_PRIORITY_SHIFT 2

//
// Interrupt sorted IRQ/FIQ register bits.
//

#define AM335_INTC_SORTED_ACTIVE_MASK 0x0000007F
#define AM335_INTC_SORTED_SPURIOUS 0x00000080

//
// Interrupt control register bits.
//

#define AM335_INTC_CONTROL_NEW_IRQ_AGREEMENT 0x00000001
#define AM335_INTC_CONTROL_NEW_FIQ_AGREEMENT 0x00000002

//
// LCD controller registers.
//

#define AM335_LCD_CONTROL 0x04
#define AM335_LCD_STATUS 0x08
#define AM335_LCD_LIDD_CONTROL 0x0C
#define AM335_LCD_LIDD_CS0_CONF 0x10
#define AM335_LCD_LIDD_CS0_ADDR 0x14
#define AM335_LCD_LIDD_CS0_DATA 0x18
#define AM335_LCD_LIDD_CS1_CONF 0x1C
#define AM335_LCD_LIDD_CS1_ADDR 0x20
#define AM335_LCD_LIDD_CS1_DATA 0x24
#define AM335_LCD_RASTER_CONTROL 0x28
#define AM335_LCD_RASTER_TIMING_0 0x2C
#define AM335_LCD_RASTER_TIMING_1 0x30
#define AM335_LCD_RASTER_TIMING_2 0x34
#define AM335_LCD_SUBPANEL 0x38
#define AM335_LCD_SUBPANEL2 0x3C
#define AM335_LCD_DMA_CONTROL 0x40
#define AM335_LCD_FB0_BASE 0x44
#define AM335_LCD_FB0_CEILING 0x48
#define AM335_LCD_FB1_BASE 0x4C
#define AM335_LCD_FB1_CEILING 0x50
#define AM335_LCD_SYSTEM_CONFIG 0x54
#define AM335_LCD_IRQSTATUS_RAW 0x58
#define AM335_LCD_IRQSTATUS 0x5C
#define AM335_LCD_IRQENABLE_SET 0x60
#define AM335_LCD_IRQENABLE_CLEAR 0x64
#define AM335_LCD_IRQEOI_VECTOR 0x68
#define AM335_LCD_CLOCK_ENABLE 0x6C
#define AM335_LCD_CLOCK_RESET 0x70

//
// LCD clock enable register bits.
//

#define AM335_LCD_CLOCK_ENABLE_CORE 0x00000001
#define AM335_LCD_CLOCK_ENABLE_LIDD 0x00000002
#define AM335_LCD_CLOCK_ENABLE_DMA 0x00000004

//
// LCD raster control register bits.
//

#define AM335_LCD_RASTER_CONTROL_ENABLE 0x00000001
#define AM335_LCD_RASTER_CONTROL_TFT 0x00000080
#define AM335_LCD_RASTER_CONTROL_FIFO_DMA_DELAY_MASK 0x000FF000
#define AM335_LCD_RASTER_CONTROL_FIFO_DMA_DELAY_SHIFT 12
#define AM335_LCD_RASTER_CONTROL_PALETTE_LOAD_MASK 0x00300000
#define AM335_LCD_RASTER_CONTROL_PALETTE_LOAD_DATA_ONLY 0x00200000
#define AM335_LCD_RASTER_CONTROL_TFT24 0x02000000
#define AM335_LCD_RASTER_CONTROL_TFT24_UNPACKED 0x04000000

//
// LCD control register bits.
//

#define AM335_LCD_CONTROL_RASTER_MODE 0x00000001
#define AM335_LCD_CONTROL_DIVISOR_SHIFT 8

//
// LCD DMA control register bits.
//

#define AM335_LCD_DMA_BURST_SIZE_16 (0x4 << 4)
#define AM335_LCD_DMA_FIFO_THRESHOLD_8 (0x0 << 8)

//
// General LCD timing definitions.
//

#define AM335_LCD_RASTER_TIMING_PORCH_LOW_MASK 0xFF
#define AM335_LCD_RASTER_TIMING_PORCH_HIGH_SHIFT 8
#define AM335_LCD_RASTER_TIMING_PORCH_HIGH_MASK 0x3
#define AM335_LCD_RASTER_TIMING_HSYNC_HIGH_SHIFT 6
#define AM335_LCD_RASTER_TIMING_HSYNC_HIGH_MASK 0xF

//
// LCD timing 0 register bits.
//

#define AM335_LCD_RASTER_TIMING_0_HSYNC_SHIFT 10
#define AM335_LCD_RASTER_TIMING_0_HORIZONTAL_FRONT_PORCH_SHIFT 16
#define AM335_LCD_RASTER_TIMING_0_HORIZONTAL_BACK_PORCH_SHIFT 24
#define AM335_LCD_RASTER_TIMING_0_HSYNC_MASK 0x3F

//
// LCD timing 1 register bits.
//

#define AM335_LCD_RASTER_TIMING_1_VSYNC_SHIFT 10
#define AM335_LCD_RASTER_TIMING_1_VERTICAL_FRONT_PORCH_SHIFT 16
#define AM335_LCD_RASTER_TIMING_1_VERTICAL_BACK_PORCH_SHIFT 24

//
// LCD Raster timing 2 register bits.
//

#define AM335_LCD_RASTER_TIMING_2_INVERT_VERTICAL_SYNC 0x00100000
#define AM335_LCD_RASTER_TIMING_2_INVERT_HORIZONTAL_SYNC 0x00200000
#define AM335_LCD_RASTER_TIMING_2_SYNC_CONTROL 0x02000000
#define AM335_LCD_RASTER_TIMING_2_AC_BIAS_FREQUENCY_SHIFT 8
#define AM335_LCD_RASTER_TIMING_2_LINES_PER_PANEL_BIT_10_SHIFT 26
#define AM335_LCD_RASTER_TIMING_2_LINES_PER_PANEL_BIT_10 0x04000000
#define AM335_LCD_RASTER_TIMING_2_HORIZONTAL_FRONT_PORCH_HIGH_SHIFT 0
#define AM335_LCD_RASTER_TIMING_2_HORIZONTAL_BACK_PORCH_HIGH_SHIFT 4
#define AM335_LCD_RASTER_TIMING_2_HORIZONTAL_SYNC_HIGH_SHIFT 27

//
// LCD system configuration register bits.
//

#define AM335_LCD_SYSTEM_CONFIG_STANDBY_SMART (0x2 << 4)
#define AM335_LCD_SYSTEM_CONFIG_IDLE_SMART (0x2 << 2)

//
// LCD clock reset register bits.
//

#define AM335_LCD_CLOCK_RESET_MAIN 0x00000008

//
// Define Ethernet PORT register offsets.
//

#define AM335_CPSW_PORT_REGISTERS 0x4A100100
#define AM335_CPSW_PORT1_SOURCE_ADDRESS_LOW 0x120
#define AM335_CPSW_PORT1_SOURCE_ADDRESS_HIGH 0x124
#define AM335_CPSW_PORT2_SOURCE_ADDRESS_LOW 0x220
#define AM335_CPSW_PORT2_SOURCE_ADDRESS_HIGH 0x224

//
// ------------------------------------------------------ Data Type Definitions
//

//
// -------------------------------------------------------------------- Globals
//

//
// -------------------------------------------------------- Function Prototypes
//
